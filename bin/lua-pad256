#!/usr/bin/env python
import argparse

parser = argparse.ArgumentParser(description="Pad a Lua file to a 256 byte boundary")
parser.add_argument("inpath", metavar="IN_FILE", type=str,
                    help="the input Lua file")
parser.add_argument("outpath", metavar="OUT_FILE", type=str,
                    help="the output file to write the padded Lua")

args = parser.parse_args()

PAD_HEADER = "\n-- PADDING TO 256 BYTE BOUNDARY\n-- "
PAD_FOOTER = "\n"

def do_pad(infile, outfile):
    indata = infile.read()
    len_to_pad = len(indata) + len(PAD_HEADER) + len(PAD_FOOTER)
    padding_needed = align(256, len_to_pad) - len_to_pad
    padding = "X" * padding_needed

    outfile.write(indata + PAD_HEADER + padding + PAD_FOOTER)

def align(b, n):
    rem = n % b
    if rem == 0:
        return n
    else:
        return (n - rem) + b

with open(args.inpath, 'r') as i:
    with open(args.outpath, 'w') as o:
        do_pad(i, o)
